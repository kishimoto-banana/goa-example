// Code generated by goa v3.0.9, DO NOT EDIT.
//
// ping endpoints
//
// Command:
// $ goa gen goa-example/design

package ping

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// Endpoints wraps the "ping" service endpoints.
type Endpoints struct {
	ReturnPong goa.Endpoint
}

// NewEndpoints wraps the methods of the "ping" service with endpoints.
func NewEndpoints(s Service) *Endpoints {
	return &Endpoints{
		ReturnPong: NewReturnPongEndpoint(s),
	}
}

// Use applies the given middleware to all the "ping" service endpoints.
func (e *Endpoints) Use(m func(goa.Endpoint) goa.Endpoint) {
	e.ReturnPong = m(e.ReturnPong)
}

// NewReturnPongEndpoint returns an endpoint function that calls the method
// "Return pong" of service "ping".
func NewReturnPongEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req interface{}) (interface{}, error) {
		return s.ReturnPong(ctx)
	}
}
